

// import { useState, useEffect } from "react";
// import { useLocation, Link } from "react-router-dom";
// import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
// import { Progress } from "@/components/ui/progress";
// import { Button } from "@/components/ui/button";
// import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
// import { Badge } from "@/components/ui/badge";
// import { ArrowLeft, RefreshCw, CheckCircle, AlertCircle, TrendingUp, User, FileText, Building, Target, Star, AlertTriangle } from "lucide-react";
// import PDFExport from "@/components/PDFExport";

// interface LinkedInSection {
//   name: string;
//   coordinates: [number, number];
//   criticality: 'red' | 'yellow' | 'green';
//   score: number;
//   comment: string;
//   priority: number;
//   improvements: string[];
//   industry_benchmark: string;
//   impact_on_opportunities: string;
//   detailed_analysis: string;
// }

// interface AnalysisResults {
//   overallScore: number;
//   resumeAnalysis: {
//     strengths: string[];
//     weaknesses: string[];
//     suggestions: string[];
//     atsScore: number;
//     skills?: string[];
//     experience?: string[];
//     keywords?: string[];
//   };
//   linkedinAnalysis: {
//     overallScore: number;
//     missingElements: string[];
//     recommendations: string[];
//     detailedSections?: LinkedInSection[];
//     criticalIssues?: string[];
//     competitiveAdvantages?: string[];
//   };
//   jobMatch: {
//     matchPercentage: number;
//     keywordAlignment: number;
//     skillsMatch: string[];
//     skillsGap: string[];
//     matchingStrengths?: string[];
//     improvementAreas?: string[];
//   };
//   recommendations: {
//     immediate: string[];
//     shortTerm: string[];
//     longTerm: string[];
//   };
// }

// const Results = () => {
//   const location = useLocation();
//   const [results, setResults] = useState<AnalysisResults | null>(null);
//   const [loading, setLoading] = useState(true);

//   useEffect(() => {
//     const analysisResults = location.state?.results;
//     if (analysisResults) {
//       setResults(analysisResults);
//       setLoading(false);
//     } else {
//       // Redirect back if no results
//       setTimeout(() => {
//         window.history.back();
//       }, 2000);
//     }
//   }, [location.state]);

//   if (loading || !results) {
//     return (
//       <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center">
//         <div className="text-center">
//           <RefreshCw className="w-8 h-8 animate-spin mx-auto mb-4 text-blue-600" />
//           <p className="text-gray-600">Loading your analysis results...</p>
//         </div>
//       </div>
//     );
//   }

//   const getScoreColor = (score: number) => {
//     if (score >= 80) return "text-green-600";
//     if (score >= 60) return "text-yellow-600";
//     return "text-red-600";
//   };

//   const getProgressColor = (score: number) => {
//     if (score >= 80) return "bg-green-500";
//     if (score >= 60) return "bg-yellow-500";
//     return "bg-red-500";
//   };

//   const getCriticalityColor = (criticality: 'red' | 'yellow' | 'green') => {
//     switch (criticality) {
//       case 'red': return 'bg-red-100 text-red-800 border-red-200';
//       case 'yellow': return 'bg-yellow-100 text-yellow-800 border-yellow-200';
//       case 'green': return 'bg-green-100 text-green-800 border-green-200';
//       default: return 'bg-gray-100 text-gray-800 border-gray-200';
//     }
//   };

//   const getCriticalityIcon = (criticality: 'red' | 'yellow' | 'green') => {
//     switch (criticality) {
//       case 'red': return <AlertTriangle className="w-4 h-4" />;
//       case 'yellow': return <AlertCircle className="w-4 h-4" />;
//       case 'green': return <CheckCircle className="w-4 h-4" />;
//       default: return <AlertCircle className="w-4 h-4" />;
//     }
//   };

//   return (
//     <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50">
//       <div className="max-w-7xl mx-auto px-4 py-8">
//         {/* Header */}
//         <div className="mb-8">
//           <Link to="/analysis" className="inline-flex items-center text-blue-600 hover:text-blue-700 mb-4">
//             <ArrowLeft className="w-4 h-4 mr-2" />
//             Back to Analysis
//           </Link>
//           <div className="flex flex-col md:flex-row md:justify-between md:items-start gap-4">
//             <div>
//               <h1 className="text-4xl font-bold text-gray-900 mb-4">
//                 Your AI Analysis Results
//               </h1>
//               <p className="text-xl text-gray-600">
//                 Comprehensive insights generated by Gemini AI to boost your job application success
//               </p>
//             </div>
//             <PDFExport 
//               results={results} 
//               className="bg-blue-600 hover:bg-blue-700 self-start md:self-auto"
//             />
//           </div>
//         </div>

//         {/* Overall Score */}
//         <Card className="mb-8 bg-gradient-to-r from-blue-600 to-indigo-600 text-white">
//           <CardHeader>
//             <CardTitle className="flex items-center gap-2 text-2xl">
//               <TrendingUp className="w-6 h-6" />
//               Overall Job Readiness Score
//             </CardTitle>
//             <CardDescription className="text-blue-100">
//               Dynamically generated by Gemini AI based on your specific job requirements
//             </CardDescription>
//           </CardHeader>
//           <CardContent>
//             <div className="flex items-center gap-6">
//               <div className="text-6xl font-bold">{results.overallScore}%</div>
//               <div className="flex-1">
//                 <Progress value={results.overallScore} className="h-4 mb-2 bg-white/20" />
//                 <p className="text-blue-100">
//                   {results.overallScore >= 80 ? "Excellent job readiness!" : 
//                    results.overallScore >= 60 ? "Good foundation, room for improvement" : 
//                    "Significant improvements needed"}
//                 </p>
//               </div>
//             </div>
//           </CardContent>
//         </Card>

//         {/* Detailed Analysis Tabs */}
//         <Tabs defaultValue="resume" className="space-y-6">
//           <TabsList className="grid w-full grid-cols-2 md:grid-cols-4">
//             <TabsTrigger value="resume" className="flex items-center gap-2 text-sm">
//               <FileText className="w-4 h-4" />
//               <span className="hidden sm:inline">Resume</span>
//             </TabsTrigger>
//             <TabsTrigger value="linkedin" className="flex items-center gap-2 text-sm">
//               <User className="w-4 h-4" />
//               <span className="hidden sm:inline">LinkedIn</span>
//             </TabsTrigger>
//             <TabsTrigger value="job-match" className="flex items-center gap-2 text-sm">
//               <Building className="w-4 h-4" />
//               <span className="hidden sm:inline">Job Match</span>
//             </TabsTrigger>
//             <TabsTrigger value="recommendations" className="flex items-center gap-2 text-sm">
//               <CheckCircle className="w-4 h-4" />
//               <span className="hidden sm:inline">Action Plan</span>
//             </TabsTrigger>
//           </TabsList>

//           {/* Resume Analysis */}
//           <TabsContent value="resume" className="space-y-6">
//             <div className="grid lg:grid-cols-2 gap-6">
//               <Card>
//                 <CardHeader>
//                   <CardTitle className="text-green-600 flex items-center gap-2">
//                     <CheckCircle className="w-5 h-5" />
//                     Strengths
//                   </CardTitle>
//                 </CardHeader>
//                 <CardContent>
//                   <ul className="space-y-2">
//                     {results.resumeAnalysis.strengths.map((strength, index) => (
//                       <li key={index} className="flex items-start gap-2">
//                         <CheckCircle className="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" />
//                         <span className="text-sm">{strength}</span>
//                       </li>
//                     ))}
//                   </ul>
//                 </CardContent>
//               </Card>

//               <Card>
//                 <CardHeader>
//                   <CardTitle className="text-red-600 flex items-center gap-2">
//                     <AlertCircle className="w-5 h-5" />
//                     Areas for Improvement
//                   </CardTitle>
//                 </CardHeader>
//                 <CardContent>
//                   <ul className="space-y-2">
//                     {results.resumeAnalysis.weaknesses.map((weakness, index) => (
//                       <li key={index} className="flex items-start gap-2">
//                         <AlertCircle className="w-4 h-4 text-red-500 mt-0.5 flex-shrink-0" />
//                         <span className="text-sm">{weakness}</span>
//                       </li>
//                     ))}
//                   </ul>
//                 </CardContent>
//               </Card>
//             </div>

//             {/* Skills and Keywords */}
//             {(results.resumeAnalysis.skills || results.resumeAnalysis.keywords) && (
//               <div className="grid lg:grid-cols-2 gap-6">
//                 {results.resumeAnalysis.skills && (
//                   <Card>
//                     <CardHeader>
//                       <CardTitle className="text-blue-600">Identified Skills</CardTitle>
//                     </CardHeader>
//                     <CardContent>
//                       <div className="flex flex-wrap gap-2">
//                         {results.resumeAnalysis.skills.map((skill, index) => (
//                           <Badge key={index} variant="secondary" className="bg-blue-100 text-blue-800">
//                             {skill}
//                           </Badge>
//                         ))}
//                       </div>
//                     </CardContent>
//                   </Card>
//                 )}

//                 {results.resumeAnalysis.keywords && (
//                   <Card>
//                     <CardHeader>
//                       <CardTitle className="text-purple-600">Key Terms</CardTitle>
//                     </CardHeader>
//                     <CardContent>
//                       <div className="flex flex-wrap gap-2">
//                         {results.resumeAnalysis.keywords.map((keyword, index) => (
//                           <Badge key={index} variant="outline" className="text-purple-600 border-purple-200">
//                             {keyword}
//                           </Badge>
//                         ))}
//                       </div>
//                     </CardContent>
//                   </Card>
//                 )}
//               </div>
//             )}

//             {/* ATS Score */}
//             <Card>
//               <CardHeader>
//                 <CardTitle>ATS Compatibility Score</CardTitle>
//                 <CardDescription>How well your resume will pass through Applicant Tracking Systems</CardDescription>
//               </CardHeader>
//               <CardContent>
//                 <div className="flex items-center gap-4 mb-4">
//                   <div className={`text-3xl font-bold ${getScoreColor(results.resumeAnalysis.atsScore)}`}>
//                     {results.resumeAnalysis.atsScore}%
//                   </div>
//                   <Progress value={results.resumeAnalysis.atsScore} className="flex-1 h-3" />
//                 </div>
//                 <div className="space-y-2">
//                   {results.resumeAnalysis.suggestions.map((suggestion, index) => (
//                     <p key={index} className="text-sm text-gray-600 bg-gray-50 p-3 rounded">
//                       {suggestion}
//                     </p>
//                   ))}
//                 </div>
//               </CardContent>
//             </Card>
//           </TabsContent>

//           {/* LinkedIn Analysis */}
//           <TabsContent value="linkedin" className="space-y-6">
//             <Card>
//               <CardHeader>
//                 <CardTitle>LinkedIn Profile Strength</CardTitle>
//                 <CardDescription>Analysis of your LinkedIn profile completeness and optimization</CardDescription>
//               </CardHeader>
//               <CardContent>
//                 <div className="flex items-center gap-4 mb-6">
//                   <div className={`text-3xl font-bold ${getScoreColor(results.linkedinAnalysis.overallScore)}`}>
//                     {results.linkedinAnalysis.overallScore}%
//                   </div>
//                   <Progress value={results.linkedinAnalysis.overallScore} className="flex-1 h-3" />
//                 </div>

//                 <div className="grid lg:grid-cols-2 gap-6">
//                   <div>
//                     <h4 className="font-semibold text-red-600 mb-3 flex items-center gap-2">
//                       <AlertCircle className="w-4 h-4" />
//                       Missing Elements
//                     </h4>
//                     <ul className="space-y-2">
//                       {results.linkedinAnalysis.missingElements.map((element, index) => (
//                         <li key={index} className="flex items-start gap-2">
//                           <AlertCircle className="w-4 h-4 text-red-500 mt-0.5 flex-shrink-0" />
//                           <span className="text-sm">{element}</span>
//                         </li>
//                       ))}
//                     </ul>
//                   </div>

//                   <div>
//                     <h4 className="font-semibold text-blue-600 mb-3 flex items-center gap-2">
//                       <CheckCircle className="w-4 h-4" />
//                       Recommendations
//                     </h4>
//                     <ul className="space-y-2">
//                       {results.linkedinAnalysis.recommendations.map((rec, index) => (
//                         <li key={index} className="flex items-start gap-2">
//                           <CheckCircle className="w-4 h-4 text-blue-500 mt-0.5 flex-shrink-0" />
//                           <span className="text-sm">{rec}</span>
//                         </li>
//                       ))}
//                     </ul>
//                   </div>
//                 </div>
//               </CardContent>
//             </Card>

//             {/* Critical Issues and Competitive Advantages */}
//             {(results.linkedinAnalysis.criticalIssues || results.linkedinAnalysis.competitiveAdvantages) && (
//               <div className="grid lg:grid-cols-2 gap-6">
//                 {results.linkedinAnalysis.criticalIssues && results.linkedinAnalysis.criticalIssues.length > 0 && (
//                   <Card className="border-red-200">
//                     <CardHeader>
//                       <CardTitle className="text-red-600 flex items-center gap-2">
//                         <AlertTriangle className="w-5 h-5" />
//                         Critical Issues
//                       </CardTitle>
//                       <CardDescription>High-priority items that need immediate attention</CardDescription>
//                     </CardHeader>
//                     <CardContent>
//                       <ul className="space-y-2">
//                         {results.linkedinAnalysis.criticalIssues.map((issue, index) => (
//                           <li key={index} className="flex items-start gap-2">
//                             <AlertTriangle className="w-4 h-4 text-red-500 mt-0.5 flex-shrink-0" />
//                             <span className="text-sm text-red-700">{issue}</span>
//                           </li>
//                         ))}
//                       </ul>
//                     </CardContent>
//                   </Card>
//                 )}

//                 {results.linkedinAnalysis.competitiveAdvantages && results.linkedinAnalysis.competitiveAdvantages.length > 0 && (
//                   <Card className="border-green-200">
//                     <CardHeader>
//                       <CardTitle className="text-green-600 flex items-center gap-2">
//                         <Star className="w-5 h-5" />
//                         Competitive Advantages
//                       </CardTitle>
//                       <CardDescription>Your standout strengths that give you an edge</CardDescription>
//                     </CardHeader>
//                     <CardContent>
//                       <ul className="space-y-2">
//                         {results.linkedinAnalysis.competitiveAdvantages.map((advantage, index) => (
//                           <li key={index} className="flex items-start gap-2">
//                             <Star className="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" />
//                             <span className="text-sm text-green-700">{advantage}</span>
//                           </li>
//                         ))}
//                       </ul>
//                     </CardContent>
//                   </Card>
//                 )}
//               </div>
//             )}

//             {/* Detailed Section Analysis */}
//             {results.linkedinAnalysis.detailedSections && results.linkedinAnalysis.detailedSections.length > 0 && (
//               <Card>
//                 <CardHeader>
//                   <CardTitle>Profile Section Analysis</CardTitle>
//                   <CardDescription>Detailed breakdown of each LinkedIn profile section</CardDescription>
//                 </CardHeader>
//                 <CardContent>
//                   <div className="space-y-4">
//                     {results.linkedinAnalysis.detailedSections
//                       .sort((a, b) => a.priority - b.priority)
//                       .map((section, index) => (
//                         <div key={index} className="border rounded-lg p-4">
//                           <div className="flex items-center justify-between mb-3">
//                             <div className="flex items-center gap-3">
//                               <h5 className="font-semibold text-gray-900">{section.name}</h5>
//                               <Badge 
//                                 variant="outline" 
//                                 className={`${getCriticalityColor(section.criticality)} border`}
//                               >
//                                 <span className="flex items-center gap-1">
//                                   {getCriticalityIcon(section.criticality)}
//                                   {section.criticality.toUpperCase()}
//                                 </span>
//                               </Badge>
//                             </div>
//                             <div className="flex items-center gap-2">
//                               <span className={`text-lg font-bold ${getScoreColor(section.score)}`}>
//                                 {section.score}%
//                               </span>
//                             </div>
//                           </div>
                          
//                           <p className="text-sm text-gray-600 mb-3">{section.comment}</p>
                          
//                           {section.improvements.length > 0 && (
//                             <div className="mb-3">
//                               <h6 className="font-medium text-gray-700 mb-2">Improvements:</h6>
//                               <ul className="text-sm text-gray-600 space-y-1">
//                                 {section.improvements.map((improvement, impIndex) => (
//                                   <li key={impIndex} className="flex items-start gap-2">
//                                     <Target className="w-3 h-3 text-blue-500 mt-0.5 flex-shrink-0" />
//                                     {improvement}
//                                   </li>
//                                 ))}
//                               </ul>
//                             </div>
//                           )}
                          
//                           {section.industry_benchmark && (
//                             <div className="text-xs text-gray-500 bg-gray-50 p-2 rounded">
//                               <strong>Industry Benchmark:</strong> {section.industry_benchmark}
//                             </div>
//                           )}
//                         </div>
//                       ))}
//                   </div>
//                 </CardContent>
//               </Card>
//             )}
//           </TabsContent>

//           {/* Job Match Analysis */}
//           <TabsContent value="job-match" className="space-y-6">
//             <div className="grid lg:grid-cols-2 gap-6">
//               <Card>
//                 <CardHeader>
//                   <CardTitle>Job Match Score</CardTitle>
//                   <CardDescription>How well you align with the job requirements</CardDescription>
//                 </CardHeader>
//                 <CardContent>
//                   <div className="flex items-center gap-4 mb-4">
//                     <div className={`text-3xl font-bold ${getScoreColor(results.jobMatch.matchPercentage)}`}>
//                       {results.jobMatch.matchPercentage}%
//                     </div>
//                     <Progress value={results.jobMatch.matchPercentage} className="flex-1 h-3" />
//                   </div>
//                   <p className="text-sm text-gray-600">
//                     Keyword Alignment: <span className="font-semibold">{results.jobMatch.keywordAlignment}%</span>
//                   </p>
//                 </CardContent>
//               </Card>

//               <Card>
//                 <CardHeader>
//                   <CardTitle className="text-green-600">Matching Skills</CardTitle>
//                 </CardHeader>
//                 <CardContent>
//                   <div className="flex flex-wrap gap-2">
//                     {results.jobMatch.skillsMatch.map((skill, index) => (
//                       <Badge key={index} className="bg-green-100 text-green-800">
//                         {skill}
//                       </Badge>
//                     ))}
//                   </div>
//                 </CardContent>
//               </Card>
//             </div>

//             <Card>
//               <CardHeader>
//                 <CardTitle className="text-red-600">Skills Gap</CardTitle>
//                 <CardDescription>Skills mentioned in the job posting that you should highlight or develop</CardDescription>
//               </CardHeader>
//               <CardContent>
//                 <div className="flex flex-wrap gap-2">
//                   {results.jobMatch.skillsGap.map((skill, index) => (
//                     <Badge key={index} variant="destructive" className="bg-red-100 text-red-800">
//                       {skill}
//                     </Badge>
//                   ))}
//                 </div>
//               </CardContent>
//             </Card>

//             {/* Enhanced Job Match Details */}
//             {(results.jobMatch.matchingStrengths || results.jobMatch.improvementAreas) && (
//               <div className="grid lg:grid-cols-2 gap-6">
//                 {results.jobMatch.matchingStrengths && results.jobMatch.matchingStrengths.length > 0 && (
//                   <Card>
//                     <CardHeader>
//                       <CardTitle className="text-green-600 flex items-center gap-2">
//                         <Star className="w-5 h-5" />
//                         Your Strengths for This Role
//                       </CardTitle>
//                     </CardHeader>
//                     <CardContent>
//                       <ul className="space-y-2">
//                         {results.jobMatch.matchingStrengths.map((strength, index) => (
//                           <li key={index} className="flex items-start gap-2">
//                             <CheckCircle className="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" />
//                             <span className="text-sm">{strength}</span>
//                           </li>
//                         ))}
//                       </ul>
//                     </CardContent>
//                   </Card>
//                 )}

//                 {results.jobMatch.improvementAreas && results.jobMatch.improvementAreas.length > 0 && (
//                   <Card>
//                     <CardHeader>
//                       <CardTitle className="text-orange-600 flex items-center gap-2">
//                         <Target className="w-5 h-5" />
//                         Areas to Emphasize
//                       </CardTitle>
//                     </CardHeader>
//                     <CardContent>
//                       <ul className="space-y-2">
//                         {results.jobMatch.improvementAreas.map((area, index) => (
//                           <li key={index} className="flex items-start gap-2">
//                             <Target className="w-4 h-4 text-orange-500 mt-0.5 flex-shrink-0" />
//                             <span className="text-sm">{area}</span>
//                           </li>
//                         ))}
//                       </ul>
//                     </CardContent>
//                   </Card>
//                 )}
//               </div>
//             )}
//           </TabsContent>

//           {/* Recommendations */}
//           <TabsContent value="recommendations" className="space-y-6">
//             <div className="grid gap-6">
//               <Card className="border-green-200">
//                 <CardHeader>
//                   <CardTitle className="text-green-600 flex items-center gap-2">
//                     <CheckCircle className="w-5 h-5" />
//                     Immediate Actions (This Week)
//                   </CardTitle>
//                   <CardDescription>Quick wins that can boost your profile immediately</CardDescription>
//                 </CardHeader>
//                 <CardContent>
//                   <ul className="space-y-3">
//                     {results.recommendations.immediate.map((action, index) => (
//                       <li key={index} className="flex items-start gap-3">
//                         <CheckCircle className="w-5 h-5 text-green-500 mt-0.5 flex-shrink-0" />
//                         <span>{action}</span>
//                       </li>
//                     ))}
//                   </ul>
//                 </CardContent>
//               </Card>

//               <Card className="border-blue-200">
//                 <CardHeader>
//                   <CardTitle className="text-blue-600 flex items-center gap-2">
//                     <Target className="w-5 h-5" />
//                     Short-term Goals (This Month)
//                   </CardTitle>
//                   <CardDescription>Strategic improvements to implement over the next few weeks</CardDescription>
//                 </CardHeader>
//                 <CardContent>
//                   <ul className="space-y-3">
//                     {results.recommendations.shortTerm.map((action, index) => (
//                       <li key={index} className="flex items-start gap-3">
//                         <Target className="w-5 h-5 text-blue-500 mt-0.5 flex-shrink-0" />
//                         <span>{action}</span>
//                       </li>
//                     ))}
//                   </ul>
//                 </CardContent>
//               </Card>

//               <Card className="border-purple-200">
//                 <CardHeader>
//                   <CardTitle className="text-purple-600 flex items-center gap-2">
//                     <TrendingUp className="w-5 h-5" />
//                     Long-term Development (Next 3 Months)
//                   </CardTitle>
//                   <CardDescription>Strategic career development initiatives</CardDescription>
//                 </CardHeader>
//                 <CardContent>
//                   <ul className="space-y-3">
//                     {results.recommendations.longTerm.map((action, index) => (
//                       <li key={index} className="flex items-start gap-3">
//                         <TrendingUp className="w-5 h-5 text-purple-500 mt-0.5 flex-shrink-0" />
//                         <span>{action}</span>
//                       </li>
//                     ))}
//                   </ul>
//                 </CardContent>
//               </Card>
//             </div>
//           </TabsContent>
//         </Tabs>
//       </div>
//     </div>
//   );
// };

// export default Results;

import { useState, useEffect } from "react";
import { useLocation, Link } from "react-router-dom";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";

export default function ResumeAnalysisPage() {
  const location = useLocation();
  const resumeAnalysis = location.state?.resumeAnalysis;

  const subscores = resumeAnalysis?.atsSubscoresNormalized;

  return (
    <div className="max-w-4xl mx-auto py-10 px-4">
      <Tabs defaultValue="ats" className="space-y-6">
        <TabsList className="grid w-full grid-cols-2">
          <TabsTrigger value="ats">ATS Analysis</TabsTrigger>
          <TabsTrigger value="summary">Summary</TabsTrigger>
        </TabsList>

        <TabsContent value="ats" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>ATS Compatibility Score</CardTitle>
              <CardDescription>
                This score reflects how well your resume aligns with ATS standards.
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="text-4xl font-bold text-center mb-4">
                {resumeAnalysis?.atsScore ?? "N/A"}%
              </div>
              <Progress value={resumeAnalysis?.atsScore ?? 0} className="h-4" />
            </CardContent>
          </Card>

          {/* ✅ Subscores section */}
          {subscores && (
            <Card>
              <CardHeader>
                <CardTitle>ATS Subscores</CardTitle>
                <CardDescription>
                  Detailed breakdown of resume evaluation criteria.
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <p className="text-sm font-medium">Content Quality</p>
                  <Progress value={subscores.contentQuality ?? 0} className="h-2" />
                  <p className="text-xs text-muted-foreground mt-1">
                    {subscores.contentQuality ?? 0}/100
                  </p>
                </div>
                <div>
                  <p className="text-sm font-medium">Visual Design</p>
                  <Progress value={subscores.visualDesign ?? 0} className="h-2" />
                  <p className="text-xs text-muted-foreground mt-1">
                    {subscores.visualDesign ?? 0}/100
                  </p>
                </div>
                <div>
                  <p className="text-sm font-medium">Readability</p>
                  <Progress value={subscores.readability ?? 0} className="h-2" />
                  <p className="text-xs text-muted-foreground mt-1">
                    {subscores.readability ?? 0}/100
                  </p>
                </div>
                <div>
                  <p className="text-sm font-medium">Technical Compliance</p>
                  <Progress value={subscores.technicalCompliance ?? 0} className="h-2" />
                  <p className="text-xs text-muted-foreground mt-1">
                    {subscores.technicalCompliance ?? 0}/100
                  </p>
                </div>
              </CardContent>
            </Card>
          )}
        </TabsContent>

        <TabsContent value="summary" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>Resume Summary</CardTitle>
              <CardDescription>
                Key highlights and potential improvements for your resume.
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-2">
              <ul className="list-disc list-inside text-sm text-muted-foreground space-y-1">
                {resumeAnalysis?.summary?.map((point: string, index: number) => (
                  <li key={index}>{point}</li>
                )) ?? <li>No summary available</li>}
              </ul>
            </CardContent>
          </Card>

          <div className="flex justify-end">
            <Link to="/dashboard">
              <Button variant="default">Back to Dashboard</Button>
            </Link>
          </div>
        </TabsContent>
      </Tabs>
    </div>
  );
}
